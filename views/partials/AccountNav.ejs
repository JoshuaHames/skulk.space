<style>

@media only screen and (max-device-width: 1400px) { /* For Mobile */
    .Small-Header{
        font-size: large;
        font-weight: 800;
        padding-bottom: 3px;
    }

    .Setting_CB{
        margin: 1.5vh;
        cursor: pointer;
        font-size: 1vh;
    }

    #AccountNav{
        font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;
        z-index: 10;
        top: 30px;
        right: -180px;
        width: 360px;
        height: 85px;
        border-top-left-radius: 10px;
        border-bottom-left-radius: 10px;
        position: fixed;
        background-color: black;
        transition: transform .15s ease-in;
        animation: RGBShadow 6s linear alternate-reverse infinite;
    }

    #AccountNav:hover{
        transition: transform .15s ease-in;
        transform: translateX(-180px)
    }

    #AccountNav-Content{
        display: grid;
        height: 100%;
        vertical-align: middle;
        grid-gap: 5px;
        grid-auto-flow: column;
        grid-template-columns: 180px auto;
        padding-left: 10px;
        padding-bottom: 0px;
        margin-bottom: 0px;
    }

    #WelcomeMessage{
        width: 180px;
        align-self: center;
        flex-wrap: wrap;
        word-break: normal;
        white-space: normal;
        color: white;
        font-size: 1.3vh;
        font-weight: 500;
    }

    #LogoutButton{
        all:unset;
        cursor: pointer;
        justify-self: end;
        vertical-align: middle;
        background-color: rgb(214, 16, 138);
        text-align: center;
        font-size: 1.3vh;
        font-weight: 500;
        right: 0px;
        width: 60%;
        border-top-left-radius: 20px;
        border-bottom-left-radius: 20px;
        outline-color: black;
    }

    #AccountOptions{
        margin-top: 0px;
        padding-top:0px;
    }

    #OptionsContent{
        margin-left: 50px;
        background-color: black;
        color: wheat;
        padding: 10px;
        border-bottom-left-radius: 10px;
        border-top-color: black;
    }

    #AccountCreatedLabel{
        padding-top: 4px;
        padding-bottom: 4px;
        font-size: larger;
    }

    .options-collapse{
        transform-origin: center top;
        transition: transform .05s ease-in;
        transform: scaleY(0)
    }

    .options-expand{
        transform-origin: center top;
        transition: transform .10s .15s ease-in;
        transform: scaleY(1.0)
    }
}

@media only screen and (min-device-width:1400px) { /* For Desktop */
    .Small-Header{
        font-size: large;
        font-weight: 800;
        padding-bottom: 3px;
    }

    .Setting_CB{
        margin: 1vh;
        cursor: pointer;
    }

    #AccountNav{
        font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;
        z-index: 10;
        top: 30px;
        right: -180px;
        width: 360px;
        height: 60px;
        border-top-left-radius: 10px;
        border-bottom-left-radius: 10px;
        position: fixed;
        background-color: black;
        transition: transform .15s ease-in;
        animation: RGBShadow 6s linear alternate-reverse infinite;
    }

    #AccountNav:hover{
        transition: transform .15s ease-in;
        transform: translateX(-180px)
    }

    #AccountNav-Content{
        display: grid;
        height: 100%;
        vertical-align: middle;
        grid-gap: 5px;
        grid-auto-flow: column;
        grid-template-columns: 180px auto;
        padding-left: 10px;
        padding-bottom: 0px;
        margin-bottom: 0px;
    }

    #WelcomeMessage{
        width: 180px;
        align-self: center;
        flex-wrap: wrap;
        word-break: normal;
        white-space: normal;
        color: white;
        font-size: 2vh;
        font-weight: 500;
    }

    #LogoutButton{
        all:unset;
        cursor: pointer;
        justify-self: end;
        vertical-align: middle;
        background-color: rgb(214, 16, 138);
        text-align: center;
        font-size: 2vh;
        font-weight: 500;
        right: 0px;
        width: 60%;
        border-top-left-radius: 20px;
        border-bottom-left-radius: 20px;
        outline-color: black;
    }

    #AccountOptions{
        margin-top: 0px;
        padding-top:0px;
    }

    #OptionsContent{
        margin-left: 50px;
        background-color: black;
        color: wheat;
        padding: 10px;
        border-bottom-left-radius: 10px;
        border-top-color: black;
    }

    #AccountCreatedLabel{
        padding-top: 4px;
        padding-bottom: 4px;
        font-size: larger;
    }

    .options-collapse{
        transform-origin: center top;
        transition: transform .05s ease-in;
        transform: scaleY(0)
    }

    .options-expand{
        transform-origin: center top;
        transition: transform .10s .15s ease-in;
        transform: scaleY(1.0)
    }
}

</style>

<script>
    //Helper functions live in header.ejs with the rest of the background scripts
    function TogglebgAnimate(){
        let cb_bgAnimate = document.getElementById('CB_bgAnimate')
        if(cb_bgAnimate.checked){
            enableBGAnimation()
            console.log("bf ON", localStorage.getItem('bgAnimate'))
        } else if (!cb_bgAnimate.checked){
            disableBGAnimation()
            console.log("bf OFF", localStorage.getItem('bgAnimate'))
        }
    }

    function ToggleLinkAnimate(){
        let cb_linkAnimate = document.getElementById('CB_linkAnimate')
        if(cb_linkAnimate.checked){
            enableLinkAnimations()
            console.log("Link Animations ON", localStorage.getItem('linkAnimate'))
        } else if (!cb_linkAnimate.checked){
            disableLinkAnimations()
            console.log("Link Animations OFF", localStorage.getItem('linkAnimate'))
        }
    }

    function sleep(milliseconds) {
    var start = new Date().getTime();
    for (var i = 0; i < 1e7; i++) {
        if ((new Date().getTime() - start) > milliseconds){
        break;
        }
    }
    }

    window.addEventListener("load", (event) => {

        HeaderSetup()

        let nav = document.getElementById('AccountNav')
        let mesg = document.getElementById('WelcomeMessage')
        let options = document.getElementById('AccountOptions')
        let createdLabel = document.getElementById('AccountCreatedLabel')
        let logButton = document.getElementById('LogoutButton')

        //Option Checkboxes
        let cb_gbAnimate = document.getElementById('CB_bgAnimate')
        let cb_linkAnimate = document.getElementById('CB_linkAnimate')

        if(isLoggedIn == true){
            options.classList.add('options-collapse')
            mesg.innerHTML = "Connected As " + userInfo.username
            let joined = new Date(parseFloat(userInfo.createdDate))
            createdLabel.innerHTML = "Member Since: " + joined.toDateString()
            logButton.innerHTML = "Log Out"
        } 
        //Settings Default Checks
        //Background Animations

            //Set Background Animation CB from Memory
            if(localStorage.getItem("bgAnimate") == 1 || !localStorage.getItem("bgAnimate")){
                cb_gbAnimate.checked = true
            } else {
                cb_gbAnimate.checked = false
            }
            //Set Link Animation CB from Memory
            if(localStorage.getItem("linkAnimate") == 1 || !localStorage.getItem("linkAnimate")){
                cb_linkAnimate.checked = true
            } else {
                cb_linkAnimate.checked = false
            }

            //Eanble BG Animation Based on CB
            if(cb_gbAnimate.checked){
                enableBGAnimation()
            } else {
                disableBGAnimation()
            }
            //Enable Link Animation based on CB
            if(cb_linkAnimate.checked){
                enableLinkAnimations()
            } else {
                disableLinkAnimations()
            }
    });

    function onHover(){
        let options = document.getElementById('AccountOptions')
        options.classList.remove('options-collapse')
        options.classList.add('options-expand')
        show.play()
    }

    function onExit(){
        let options = document.getElementById('AccountOptions')
        options.classList.add('options-collapse')
        options.classList.remove('options-expand')
        hide.play()
    }

    function logOut(){
        if(isLoggedIn){
            let mesg = document.getElementById('WelcomeMessage')
            mesg.innerHTML = "Goodbye " + userInfo.username
            logout.play()
            logout.onended = function(){
                fetch("/logout", {
                    method: "GET"
                })
                window.location.href = "/"
            }
        } else {
            window.location.href = "/login"
        }
    }

</script>

<div onmouseenter="onHover()" onmouseleave="onExit()" onload="getSettings()" id="AccountNav">
    <div id="AccountNav-Content">
        <p id="WelcomeMessage">Site Options</p>
        <button id="LogoutButton" onclick="logOut()">Log In</button>
    </div>

    <div id="AccountOptions" class="options-collapse">
        <div id="OptionsContent" class ="RainbowShadow-Topless">
            <div id="AccountCreatedLabel">OwO Howdy</div>
            <div class="Small-Header">Options</div>
            
            <input onClick='TogglebgAnimate()' type="checkbox" id="CB_bgAnimate" name="CB_bgAnimate">
            <label class ="Setting_CB" for="CB_bgAnimate">Animate Background</label><br>
            
            <input onClick='ToggleLinkAnimate()' type="checkbox" id="CB_linkAnimate" name="CB_linkAnimate">
            <label class ="Setting_CB" for="CB_linkAnimate">Link Animations</label><br>
        </div>
    </div>
</div>